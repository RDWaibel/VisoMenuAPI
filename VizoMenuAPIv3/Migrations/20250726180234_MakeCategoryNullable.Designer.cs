// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VizoMenuAPIv3.Data;

#nullable disable

namespace VizoMenuAPIv3.Migrations
{
    [DbContext(typeof(VizoMenuDbContext))]
    [Migration("20250726180234_MakeCategoryNullable")]
    partial class MakeCategoryNullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DisabledById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DisabledUTC")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EnteredById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EnteredUTC")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InviteToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InviteTokenExpires")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EnteredById");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VizoMenuAPIv3.Models.Image", b =>
                {
                    b.Property<Guid>("ImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BlobContainer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageID");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("VizoMenuAPIv3.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BaseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ImageID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ImageID");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("VizoMenuAPIv3.Models.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdditionalText1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdditionalText2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ButtonImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DisplayText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EnteredUTC")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastChangedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastChangedUTC")
                        .HasColumnType("datetime2");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SiteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SiteId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("VizoMenuAPIv3.Models.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EnteredUTC")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("VizoMenuAPIv3.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("de98fec2-9684-4183-b4ba-7d248da37bdd"),
                            Name = "SuperAdmin"
                        },
                        new
                        {
                            Id = new Guid("4b963c3c-7d9d-4787-be0f-404e2b4a1bdf"),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("e1c88b18-1199-4a78-9b4a-11432b077712"),
                            Name = "OrgAdmin"
                        },
                        new
                        {
                            Id = new Guid("f8181be3-9021-4415-be9f-d7fe3664329a"),
                            Name = "VenueAdmin"
                        },
                        new
                        {
                            Id = new Guid("49cbd11b-3bfc-4060-91f5-dc54d43f9848"),
                            Name = "SiteAdmin"
                        },
                        new
                        {
                            Id = new Guid("91af38d4-7d3c-4286-b35d-184929dd4ae8"),
                            Name = "SiteUser"
                        });
                });

            modelBuilder.Entity("VizoMenuAPIv3.Models.Site", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActiveChangedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ActiveChangedUTC")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EnteredUTC")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("SiteName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VenueId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VenueId");

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("VizoMenuAPIv3.Models.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("VizoMenuAPIv3.Models.Venue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DisabledById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DisabledUTC")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EnteredById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EnteredUTC")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Is24Hours")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("VenueName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Venues", (string)null);
                });

            modelBuilder.Entity("VizoMenuAPIv3.Models.VenueHour", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan?>("CloseTime")
                        .HasColumnType("time");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<TimeSpan?>("OpenTime")
                        .HasColumnType("time");

                    b.Property<Guid>("VenueId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VenueId");

                    b.ToTable("VenueHours", (string)null);
                });

            modelBuilder.Entity("User", b =>
                {
                    b.HasOne("User", "EnteredBy")
                        .WithMany()
                        .HasForeignKey("EnteredById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EnteredBy");
                });

            modelBuilder.Entity("VizoMenuAPIv3.Models.Item", b =>
                {
                    b.HasOne("VizoMenuAPIv3.Models.Image", "Image")
                        .WithMany("Items")
                        .HasForeignKey("ImageID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Image");
                });

            modelBuilder.Entity("VizoMenuAPIv3.Models.Menu", b =>
                {
                    b.HasOne("VizoMenuAPIv3.Models.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Site");
                });

            modelBuilder.Entity("VizoMenuAPIv3.Models.Site", b =>
                {
                    b.HasOne("VizoMenuAPIv3.Models.Venue", "Venue")
                        .WithMany("Sites")
                        .HasForeignKey("VenueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("VizoMenuAPIv3.Models.UserRole", b =>
                {
                    b.HasOne("VizoMenuAPIv3.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VizoMenuAPIv3.Models.Venue", b =>
                {
                    b.HasOne("VizoMenuAPIv3.Models.Organization", "Organization")
                        .WithMany("Venues")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("VizoMenuAPIv3.Models.VenueHour", b =>
                {
                    b.HasOne("VizoMenuAPIv3.Models.Venue", "Venue")
                        .WithMany("Hours")
                        .HasForeignKey("VenueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("VizoMenuAPIv3.Models.Image", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("VizoMenuAPIv3.Models.Organization", b =>
                {
                    b.Navigation("Venues");
                });

            modelBuilder.Entity("VizoMenuAPIv3.Models.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("VizoMenuAPIv3.Models.Venue", b =>
                {
                    b.Navigation("Hours");

                    b.Navigation("Sites");
                });
#pragma warning restore 612, 618
        }
    }
}
